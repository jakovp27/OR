{
  "openapi": "3.0.3",
  "info": {
    "title": "Košarkaši",
    "version": "1.0",
    "contact": {
      "name": "Jakov Prister",
      "email": "jp52783@fer.hr"
    },
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/players": {
      "get": {
        "summary": "Get all players from database",
        "description": "Returns all players",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Fetch successfull"
          }
        }
      },
      "post": {
        "summary": "Add new player to database",
        "description": "Adds new player",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successfully added"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "New player is not in good format"
          }
        }
      },
      "put": {
        "summary": "Updates player in database",
        "description": "Updates player",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successfully added"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Updated player is not in good format"
          },
          "404": {
            "content": {
              "application/json": {}
            },
            "description": "Updated player must have existing id"
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "summary": "Gets player from database by ID",
        "description": "Returns a single player from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Fetch successfull"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Invalid ID, ID must be number"
          },
          "404": {
            "content": {
              "application/json": {}
            },
            "description": "Player with ID not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes player from database by ID",
        "description": "Deletes a single player from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Invalid ID, ID must be number"
          },
          "404": {
            "content": {
              "application/json": {}
            },
            "description": "Player with ID not found"
          }
        }
      }
    },
    "/players/surname/{surname}": {
      "get": {
        "summary": "Gets player from database by surname",
        "description": "Returns a single player from database",
        "parameters": [
          {
            "name": "surname",
            "in": "path",
            "description": "Surname of the player",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Fetch successfull"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Invalid surname, name must be string"
          },
          "404": {
            "content": {
              "application/json": {}
            },
            "description": "Player with surname not found"
          }
        }
      }
    },
    "/players/position/{position}": {
      "get": {
        "summary": "Gets players from database that are plying at given position",
        "description": "Returns players playing at given position",
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "description": "Position of the player",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Fetch successfull"
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Invalid position, position must be string"
          },
          "404": {
            "content": {
              "application/json": {}
            },
            "description": "Player playing at given position not found"
          }
        }
      }
    },
    "/openapi": {
      "get": {
        "summary": "Gets openapi",
        "description": "Returns openapi",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Fetch successfull"
          }
        }
      }
    }
  }
}